@use "sass:math";
@use './functions' as *;

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина макету
$maxWidth: 1920;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1170;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
// $containerPadding: 30;



@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize: $minSize,
  $keepSize: 0,
  $widthFrom: $containerWidth,
  $widthTo: $minWidth
) {
  @if ($startSize==0) {
    $startSize: 0.000001;
  }
  @if ($minSize==0) {
    $minSize: 0.000001;
  }

  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
    $widthFrom: $maxWidth;
  }

  // Брейк-поїнти в EM
  $widthFromMedia: em($widthFrom);
  $widthToMedia: rem($widthTo);

  // Формула плаваючого значення
  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
  $yIntersection: -$widthTo * $slope + $minSize;
  @if ($yIntersection==0) {
    $yIntersection: 0.000001;
  }
  $flyValue: #{$yIntersection}px ' + ' #{$slope * 100}vw;

  // Отримання значення властивості
  $propertyValue: #{'clamp(' #{$minSize}px ',' $flyValue ',' #{$startSize}px
    ')'};
  // Якщо негативні значення
  @if ($minSize > $startSize) {
    $propertyValue: #{'clamp('
      #{$startSize}px
      ','
      $flyValue
      ','
      #{$minSize}px
      ')'};
  }

  // Встановлюємо значення за замовчуванням
  @if $keepSize != 1 and $keepSize != 3 {
    @media (min-width: $widthFromMedia) {
      #{$property}: #{$startSize}px;
    }
  }
  // Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
    #{$property}: $propertyValue;
  }
  @if $keepSize != 1 and $keepSize != 2 {
    @media (max-width: $widthToMedia) {
      #{$property}: #{$minSize}px;
    }
  }
}
