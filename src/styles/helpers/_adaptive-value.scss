@use 'sass:math';
@use './functions' as *;

// отступы безопасности для контейнера
$main-offset: 15;

// максимальная ширина страницы
$max-width: 1920;

// минимальная ширина телефона
$min-width: 320;

// ширина контейнера из макета
$container-width: 1200;

// ширина контейнера с учетом padding слева и справа
$max-width-container: $container-width + ($main-offset * 2);

// $header-height: 100;
// $footer-height: 100;
// Брейк-поїнти

// $pc: em($container-width);
// $tablet: em(991.98);
// $mobile: em(767.98);
// $mobileSmall: em(479.98);

@mixin adaptive-clamp(
  $property,
  $start-size,
  $min-size,
  $width-from: $container-width,
  $width-to: $min-width,
  $keep-size: 0
) {
  // Для calc();
  $add-size: math.div($start-size - $min-size, 16);

  // Брейк-поинты в EM
  $width-from-media: em($width-from);
  $width-to-media: em($width-to);

  // Формула плавающего значения
  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  $slope: math.div(($start-size - $min-size), ($width-from - $width-to));
  $y-intersection: -$width-to * $slope + $min-size;
  $fly-value: #{rem($y-intersection)}' + ' #{$slope * 100}vw;

  // Получение значения свойства
  $property-value: #{'clamp(' rem($min-size) ',' $fly-value ',' rem($start-size)
    ')'};

  @if $width-from == $container-width and $max-width-container == 0 {
    $width-from: global.$max-width;
  }

  @if $min-size <= 0 {
    $min-size: 0.0001;
  }

  @if $start-size <= 0 {
    $start-size: 0.0001;
  }

  // Если отрицательные значения
  @if $min-size > $start-size {
    $property-value: #{'clamp('
      rem($start-size)
      ','
      $fly-value
      ','
      rem($min-size)
      ')'};
  }

  @if $width-from ==
    $container-width or
    $width-from ==
    $max-width or
    $keep-size ==
    1 or
    $keep-size ==
    2
  {
    @media (min-width: $width-from-media) {
      #{$property}: rem($start-size);
    }
  }

  @media (min-width: $width-to-media) and (max-width: $width-from-media) {
    // Если поддерживается clamp();
    @supports (#{$property}: $property-value) {
      #{$property}: $property-value;
    }

    // Если не поддерживается clamp();
    @supports not (#{$property}: $property-value) {
      #{$property}: calc(
        #{rem($min-size)} + #{$add-size} * (100vi - #{rem($width-to)}) /
          #{math.div($width-from, 16) - math.div($width-to, 16)}
      );
    }
  }

  @if $width-to == $min-width or $keep-size == 1 or $keep-size == 3 {
    @media (max-width: $width-to-media) {
      #{$property}: rem($min-size);
    }
  }
}
